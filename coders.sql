--DISPLAY 2 TOP MOST SALARY FROM 
SELECT * FROM
(SELECT DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DRK,E.* FROM EMPLOYEES E)
WHERE DRK=1
UNION
SELECT * FROM
(SELECT DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DRK,E.* FROM EMPLOYEES E)
WHERE DRK=2;

--4 TH HIGHEST SALARY
SELECT * FROM
(SELECT DENSE_RANK() OVER(ORDER BY SALARY) AS DRK,E.* FROM EMPLOYEES E)
WHERE DRK=2;

--2 TH HIGHEST SALARY
SELECT * FROM
(SELECT DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DRK,E.* FROM EMPLOYEES E)
WHERE DRK=4;

--DISPLAY DUPLICATES
SELECT * FROM EMPLOYEES
WHERE ROWID NOT IN
(sELECT MAX(ROWID) FROM EMPLOYEES GROUP BY EMPLOYEE_ID);

--DEPT WISE SUM OF SALARIES
SELECT DEPARTMENT_ID,SUM(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

--MAXIMUM SALARY DEPT WISE WITH EMP DETAILS
SELECT * FROM
(SELECT DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC) AS DRK,E.* FROM EMPLOYEES E)
WHERE DRK=1;

--DISP 5 TO 7 RECORDS
SELECT * FROM EMPLOYEES
WHERE EMPLOYEE_ID BETWEEN 105 AND 109;

--DISP ALTERNATIVE RECORDS
SELECT * FROM
(SELECT * FROM
(SELECT ROWNUM AS RN,E.* FROM EMPLOYEES E)
WHERE MOD(RN,2)=0
UNION
SELECT * FROM
(sELECT ROWNUM AS RN,E.* FROM EMPLOYEES E)
WHERE MOD(RN,2)=1);

select sysdate from dual;

SELECT CURRENT_DATE FROM DUAL;

select count(distinct first_name)  
from employees;

SELECT E.* FROM EMPLOYEES E
WHERE ROWNUM=10;

SELECT FIRST_NAME,SALARY,'NA' 
FROM EMPLOYEES;

--SOURCE COUNT CHECK
SELECT COUNT(*) FROM EMPLOYEES;
--TARGET COUNT CHECK
SELECT COUNT(*) FROM
(SELECT COUNT(*) FROM EMPLOYEES GROUP BY EMPLOYEE_ID);


--DUPLICATE CHECKS
SELECT FIRST_NAME,COUNT(*)
FROM EMPLOYEES
GROUP BY FIRST_NAME
HAVING COUNT(*)>1;

--NULL VALIDATIONS
SELECT * FROM EMPLOYEES
WHERE EMPLOYEE_ID IS NULL;

--CHECK FOR SPACE
SELECT * FROM EMPLOYEES
WHERE DEPARTMENT_ID='';

--DISTINCT RECORDS
SELECT COUNT(DISTINCT EMPLOYEE_ID) FROM EMPLOYEES;

--SCHEMA CALL FOR DIFEENT SCHEM TABLES
SELECT * FROM HR.DATADB;

--MINUS QUERY
SELECT * FROM EMPLOYEES 
MINUS 
SELECT * FROM DATADB;

--TARGET- SOURCE
SELECT * FROM DATADB
MINUS
SELECT * FROM EMPLOYEES;

--INSERTING DUPLICATES
INSERT INTO DATADB SELECT * FROM EMPLOYEES
WHERE EMPLOYEE_ID IN(100,101,102,103,104);

--DISPLAY RECORDS
SELECT * FROM EMPLOYEES
WHERE EMPLOYEE_ID IN(100,101,102,103,104);

SELECT FIRST_NAME,COUNT(*)
FROM DATADB
GROUP BY FIRST_NAME
HAVING COUNT(*)>1;

SELECT FIRST_NAME
FROM DATADB
WHERE FIRST_NAME='Steven';

--FIND DULICATES
SELECT * FROM EMPLOYEES
WHERE ROWID NOT IN
(SELECT MAX(ROWID) FROM EMPLOYEES
GROUP BY EMPLOYEE_ID);

--
SELECT FIRST_NAME,LAST_NAME FROM DATADB
GROUP BY  FIRST_NAME,LAST_NAME
HAVING COUNT(*)>1;

SELECT * FROM DATADB
WHERE SALARY>1000
AND EMPLOYEE_ID IN(100,102,103);

S
